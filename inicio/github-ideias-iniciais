Sobre reposit√≥rios

Para criar um novo reposit√≥rio, v√° para https://github.com/new

Criar um arquivo LEIAME
Para que as pessoas possam entender e navegar mais facilmente por seu trabalho, crie um arquivo LEIAME para cada reposit√≥rio
- a minha area pessoal no github tem repositorios

- Repositorio √© uma pasta grande, que pode ser estruturada de forma hier√°rquica com arquivos, arquivos markdown, outros arquivos
- n√£o vou for√ßar o uso nesses repositorios, buscar alternativas na nuvem como dropbox, drive, onedrive, etc;
- criar aquivos de texto dentro do repositorio;
- para o arquivo ser markdown, usar o .md
- para criar uma pasta, usar o SLASH (/) e criar um arquivo dentro da pasta;
- posso tornar o repositorio um template

- IDEIAS DE OUTROS REPOSITORIOS
primeiro de tudo  √© um bom README com descri√ß√£o, t√≠tulos, categorizado, explicando bem o que est√° no repositorio; uma WIKI;
- pastas
- pastas linkadas ao readme
- ideia para o readme:
Documenta√ß√£o T√©cnica
O arquivo README deve ser visto como um ponto de partida e dentro dele deve haver links para leva-lo a documenta√ß√µes mais complexas que detalham processos mais especificos. Como organizar seu README:

üìÅ Crie uma pasta chamada docs e ter um docs/README.md.

Na verdade o que eu tenho que aprender a fazer √© o wiki

üí° Ideias para docs:
‚öôÔ∏è installation.md - Aqui voc√™ pode detalhar todo o processo de instala√ß√£o como se fosse a primeira vez da pessoa utilizando o projeto.
üëÄ usage.md - vis√£o detalhada sobre comandos e outros detalhes de como utilizar o projeto.
üöÄ advanced.md - Documento para assuntos mais espec√≠ficos do projeto.
ü§ù contributing.md - esse documento deve conter as orienta√ß√µes necess√°rias para caso algu√©m queria contribuir com o projeto, independente da forma.
üëî code_of_conduct.md - o c√≥digo de conduta informa os usu√°rios de expectativas para sua conduta enquanto participante da comunidade formada ao redor do projeto. leia mais
üìú license - Esse documento deve conter os detalhes sobre a licen√ßa do seu projeto.

- link no readme p/ project: com todo, progress, done;
-----//----------
1. Markdown Files (.md)
Voc√™ pode criar arquivos em formato Markdown diretamente nos reposit√≥rios do GitHub. O Markdown √© um formato de texto leve que permite a formata√ß√£o simples, como t√≠tulos, listas e links, facilitando a organiza√ß√£o de suas anota√ß√µes.
Esses arquivos podem ser organizados em diferentes diret√≥rios, simulando um sistema de anota√ß√µes hier√°rquico.
2. Issues e Pull Requests
Outra forma √© usar a se√ß√£o de Issues ou Pull Requests do reposit√≥rio. Embora esses recursos sejam normalmente usados para rastrear bugs ou novas funcionalidades, voc√™ pode utiliz√°-los como anota√ß√µes, pois √© poss√≠vel adicionar r√≥tulos, coment√°rios e at√© vincular arquivos.
3. GitHub Wiki
GitHub oferece um recurso de Wiki para cada reposit√≥rio. Esse recurso √© √≥timo para organizar informa√ß√µes de maneira hier√°rquica e √© f√°cil de navegar. √â semelhante a um wiki tradicional, onde voc√™ pode criar v√°rias p√°ginas interligadas.
4. Gists
O GitHub tamb√©m tem um recurso chamado Gists, que permite criar pequenos fragmentos de c√≥digo ou notas. Um Gist pode ser p√∫blico ou privado e pode ser uma op√ß√£o r√°pida para anota√ß√µes menores ou fragmentadas.



-------//---------
GITHUB ISSUES
- Para criar um problema, voc√™ precisa de um reposit√≥rio.
- Primeiro, crie um problema. Existem v√°rias maneiras de criar um problema.
ex. p√°gina principal do reposit√≥rio > Problemas > novo problema
- titulo; descri√ß√£o explicando;
- pode usar markdown
- criar uma lista de tarefas simples usando [ ] no corpo do texto do problema
- add etiquetas: categorizar o problema, no lado direito
- pode add marcos-milestones: mostra o progresso a medida que se aproxima do prazo: no marco posso colocar uma descri√ß√£o, com informa√ß√µes como uma vis√£o do rojeto, prazos do projeto, prazo do marco, porcentagem de conclus√£o do marco, numero de problemas ligados ao marco, lista de problemas ligados ao marco
- posso add o problema a um projeto existente

GITHUB PROJECTS

- Um projeto √© uma cole√ß√£o adapt√°vel de itens que voc√™ pode exibir como uma tabela, um quadro kanban ou um roteiro e que permanece atualizado com dados da GitHub. 
- criar projeto: your profile - projects - new project - seleciona o modelo - pode escolher os campos de metadados que quer;
- crie um arquivo README - detalhar a finalidade do projeto, instru√ßoes sobre como usar e incluir links relevantes; 
- posso add uma breve descri√ß√£o no inicio do projeto - sem ser no README
- O readme tem markdown
- Seus projetos podem acompanhar problemas, solicita√ß√µes de pull e ideias que voc√™ anotar.
- Um projeto pode ficar dentro ou fora de um repositorio, mas n√£o precisa necessariamente estar ligado a um arquivo, s√£o se√ß√µes autonomas;
- Num projeto, posso converter um item no ISSUE - para ser issue precisa estar num repositorio
- Num projeto, cada c√©lula tem v√°rios itens, pra filtrar, como se fosse uma tabela ou kanban; os itens que eu achei interessantes, dos que j√° vem: status, label(ligada a issue), repository pra ver se a celula est√° ligada a algum repositorio;
- alem disso posso criar colunas especificas conforme o meu gosto e os parametros dessa coluna podem ser em texto livre, numero, select ou data;
- criar um campo personalizado prioridade select c os valores alta media baixa
- dentro de uma celula do project eu posso add textos descritivos, ou colocar arquivos(ressalva do armazenamento de arquivos do github)
- pra fazer uma lista de tarefas dentro de uma celula nos projetos, √© recomendado usar [ ]
- tem as vis√µes de tabela, kanban, roadmap
- no projeto, posso arquivar as celulas conforme a necessidade, tambem posso deletar;
- um projeto pode ter status aberto ou fechado; acho que se terminar posso encerrar um projeto, ou fechar um projeto termporariamente e depois abrir; 
- no lado do nome do projeto, posso clicar - agrupar - prioridade para facilitar o foco nos itens de alta prioridade; salvar altera√ßoes para essa visualiza√ß√£o ficar;
- consigo pesquisar pelos projetos; eles podem ser da conta ou dos repositorios da conta:
- sintaxe de pesquisa dos projetos: 
is:open	Retorna projetos que est√£o abertos no momento.
is:closed	Retorna projetos que est√£o fechados no momento.
is:template	Retorna projetos marcados como um modelo.
is:private	Retorna projetos definidos como visibilidade privada.
is:public	Retorna projetos definidos como visibilidade p√∫blica.
creator:USERNAME	Retorna projetos criados por USERNAME. Por exemplo, creator:octocat retornar√° projetos criados por @octocat.
- alterar a ordena√ß√£o dos projetos:
sort:title-asc	Ordenar por t√≠tulo de projeto.
sort:updated-asc ou sort:updated-desc	Classificar pelo hor√°rio da √∫ltima atualiza√ß√£o.
sort:created-asc ou sort:created-desc	Classificar por quando o projeto foi criado.

MARKDOWN

- A maior utilidade dela atualmente certamente √© para criar os famosos READMEs;

- Todo projeto seu no GitHub ter√° seus c√≥digos, seus arquivos, suas pastas todas jogadas l√°. Um projeto digno e bem estruturado precisa passar para o leitor o sentido do seu projeto, para que ele serve, como funciona, quais linguagens, sistemas, funcionalidades, ferramentas voc√™ utilizou para criar seu programa, como contribuir, e dezenas de outras informa√ß√µes necess√°rias tem que ficar bem explicitas ao leitor quando o mesmo se deparar com seu reposit√≥rio.

- Alguns pontos e detalhes a serem adicionados em seu arquivo readme.md para melhorar seu projeto:

Introdu√ß√£o
Uma breve apresenta√ß√£o sobre o que √© o seu projeto, o que ele faz, e algumas informa√ß√µes √∫teis para serem ditas inicialmente.

√çndice
Assim como nesse readme.md tamb√©m tem, √© interessante ter um √≠ndice com os links para os t√≥picos que v√£o ser abordados em seu texto.

Habilidaes adiquiridas ou requisitadas para o projeto
Se tens posse de um projeto que visa a aprendizagem, o seu pr√≥prio estudo ou at√© base para estudos de outras pessoas, √© interessante colocar quais habilidades s√£o requeridas para estudar/rodar o seu c√≥digo, ou habilidades que v√£o ser adiquiridas se seguirem os seus estudos.

Como executar
Se tens um programa que faz alguma coisa, um jogo, um c√≥digo em determinada linguagem, √© interessante adicionar a informa√ß√£o de como executar seus c√≥digos, quais programas precisa no computador do usu√°rio, comando para executar os c√≥digos, algumas informa√ß√£oes de quais arquivos precisa ter, entre diversos outros.

Contribuindo
Se teu projeto √© OpenSource, √© natural que outros progamadores ir√£o querer melhorar seu projeto, adicionando novos recursos, corrigindo algum bug, implementando alguma tecnologia, entre diversos outros, para isso ele dever√° fazer pulls requests em seu c√≥digo, seria muito interessante implementar algumas informa√ß√µes de como contribuir com o projeto, como fazer um Fork, como fazer o pull request, e at√© algumas prefer√™ncias pessoais suas de como queres o pull request

Cr√©ditos e Licen√ßa
√â interessante tamb√©m em alguns casos concluir com os cr√©ditos do reposit√≥rio ou at√© mesmo da licen√ßa utilizada nele.

- Note que n√£o s√£o todos os pontos a colocar, t√£o pouco s√£o obrigat√≥rios, pensei apenas em ajudar os iniciantes que est√£o criando teus reposit√≥rios no momento;

- T√≠tulos: Existe uma heran√ßa de t√≠tulos, em que diferem n√£o s√≥ o tamanho da fonte, como tamb√©m sem√¢nticamente. Ou seja, o t√≠tulo n√∫mero 1 √© mais importante que o t√≠tulo n√∫mero 2, que por sua vez √© mais importante que o n√∫mero 3, e assim por diante.
Existem 6 t√≠tulos, que vai do t√≠tulo 1 (mais importante e por conseguinte maior e mais destacado) at√© o t√≠tulo 6 (menos importante e por conseguinte menor e menos destacado).

SINTAXE
# T√≠tulo 1
## T√≠tulo 2
### T√≠tulo 3
#### T√≠tulo 4
##### T√≠tulo 5
###### T√≠tulo 6

- obs que o titulo gera um link para esse ponto espec√≠fico

- ENFASE: negrito, o it√°lico, ou at√© mesmo negrito e it√°lico.
- SINTAXE NEGRITO: 
Este √© **negrito**
This is __strong__
- SINTAXE ITALICO
Este √© *it√°lico*
This is _italic_
- SINTAXE NEGRITO E ITALICO:
**_strong and em_**
- SINTAXE RISCADO:
~~riscado~~

- LINHA HORIZONTAL: tres tra√ßos, asteriscos ou underlines
---
****
___

- CITA√á√ÉO: basta o >
SINTAXE:
Para cita√ß√µes em uma linha:
> Esta √© uma cita√ß√£o

Em v√°rias linhas:
SINTAXE
> Cita√ß√£o 1
>
> Cita√ß√£o 2

CITA√á√ÉO DENTRO DA CITA√á√ÉO:
> Cita√ß√£o 1
>
>> Cita√ß√£o 2

LISTAS: numero+ponto
1.
2.
3.
4.

Lista dentro da lista: use o recuo e crie uma nova lista dentro da lista
SINTAXE
1. Primeiro item
2. Segundo item
3. Terceiro item
    1. Indentado item
    2. Indentado item
4. Quarto item

- BULLET LIST: tra√ßo, asterisco ou + no inicio da linha
SINTAXE
- 
+
*

- LISTA DE TAREFAS: checkbox pode estar preenchida ou n√£o
SINTAXE:
- [ ] Esta √© uma CheckBox n√£o marcada
- [x] Esta √© uma CheckBox marcada

-EMOJIS: dois pontos+nome do emoji+dois pontos
SINTAXE: :smile: :fire: :file_folder: :space_invader: :computer:

- TABELA: Escolha os t√≠tulos das colunas e use | para delimitar as colunas. Depois, utilize h√≠fen - na segunda linha para indicar que acima est√£o os t√≠tulos das colunas, usando novamente o | para delimitar colunas.
SINTAXE:
Teste   | Exemplo
------- | ------
Teste 1 | Exemplo 1
Teste 2 | Exemplo 2
Teste 3 | Exemplo 3
Teste 4 | Exemplo 4

- Alinhamento na tabela: utilize dois pontos : ao lado do campo horizontal de h√≠fens ---, na segunda linha da sua tabela. Veja abaixo:
Alinhado a esquerda: usar : no lado esquerdo (alinhamento padr√£o)
Alinhado a direita: usar : no lado direito
Centralizado: usar : dos dois lados
SINTAXE:
Alinhado a esquerda | Centralizado | Alinhado a direita
:--------- | :------: | -------:
Exemplo | Exemplo | Exemplo

- CODIGOS:

Temos o trecho simples, sendo de apenas uma linha, usando uma crase para abrir e outra para fechar:
SINTAXE:
` este √© um exemplo `

E tamb√©m temos a mais completa, que podemos colocar quantas linhas de c√≥digos n√≥s quisermos. Use tr√™s crases ( ¬¥¬¥¬¥ ) ou tr√™s tils ( ~~~ ) para abrir e tr√™s para fechar
SINTAXE
  ```
    Este √© nosso
    Querido Exemplo
    
    **Teste**
    
    Nota que n√£o ir√° formatar o negrito!
    ```

- LINKS: √â poss√≠vel colocar algum link em seu 'Readme', e ainda coloc√°-lo por debaixo de uma palavra, √© o chamado link-√¢ncora, acessando-o ao clicar na palavra. Entre colchetes [ ] a palava que deseja por debaixo dos panos. E entre parent√™ses ( ) o link para acesso. 
SINTAXE:
Clique [aqui](https://github.com) para acessar √† p√°gina do GitHub.

Resultado: Clique aqui para acessar √† p√°gina do GitHub.

Para links sem uma palavra por cima do link, use '< >' para envolver o link desejado, assim o link aparecer√° por inteiro ao leitor. Exemplo: https://google.com.br

- LINKS EM IMAGENS:
SINTAXE:
Clique na imagem para acessar o Google.
[![Logo_Google_2013_Official svg](https://user-images.githubusercontent.com/5532...](https://google.com.br)

- LISTS
Fica dentro da parte de estrelas;
serve para classificar os repositorios; de forma ainda maior, uma hierarquia superior;

- GIST -no github
gists no GitHub s√£o uma maneira simples de compartilhar trechos de c√≥digo com outras pessoas. Cada gist √© um reposit√≥rio Git, o que significa que ele pode ser bifurcado e clonado
- Os gists s√£o usados para manter peda√ßos de c√≥digo (snippets) que n√£o s√£o espec√≠ficos de nenhuma aplica√ß√£o ou n√£o s√£o t√£o importantes a ponto de terem um reposit√≥rio dedicado. Geralmente, as pessoas usam gists para compartilhar (ou manter em um local √∫nico) c√≥digos que usam com frequ√™ncia.
Para fazer o download de um gist, basta clon√°-lo ou baixar os arquivos diretamente do pr√≥prio gist2.

- GITHUB PROJETOS - mt pica, vai ser minha tasklist agora;

- Mudar arquivos dentro de uma pasta no diret√≥rio √© na parte de editar, voltar o nome e escrever o nome do diret√≥rio certo; N√ÉO d√° pra mudar pra outro diret√≥rio; acho que s√≥ baixando o arquivo e add no outro espa√ßo;

